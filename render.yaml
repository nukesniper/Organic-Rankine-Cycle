services:
  - type: web
    name: Organic-Rankine-Cycle
    env: python
    buildCommand: |
      # Install dependencies for Chrome and ChromeDriver
      apt-get update && apt-get install -y wget unzip curl

      # Download and install Chrome directly without dpkg
      wget -O /tmp/google-chrome-stable_current_amd64.deb https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
      mkdir -p /opt/google/chrome
      dpkg-deb -x /tmp/google-chrome-stable_current_amd64.deb /opt/google/chrome
      ln -s /opt/google/chrome/opt/google/chrome/google-chrome /usr/bin/google-chrome

      # Verify Chrome installation
      echo "Verifying Google Chrome installation..."
      google-chrome --version || { echo "Google Chrome not installed correctly."; exit 1; }

      # Fetch ChromeDriver version
      CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+' | head -n1)
      echo "Installed Google Chrome version: $CHROME_VERSION"
      CHROMEDRIVER_VERSION=$(curl -s https://chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION)
      if [ -z "$CHROMEDRIVER_VERSION" ]; then
        echo "Failed to fetch ChromeDriver version for Chrome version $CHROME_VERSION."
        exit 1
      fi
      echo "Matching ChromeDriver version: $CHROMEDRIVER_VERSION"

      # Download and install ChromeDriver
      mkdir -p /opt/render/project/src/bin
      wget https://chromedriver.storage.googleapis.com/$CHROMEDRIVER_VERSION/chromedriver_linux64.zip
      unzip chromedriver_linux64.zip -d /opt/render/project/src/bin/
      chmod +x /opt/render/project/src/bin/chromedriver

      # Install Python dependencies
      pip install -r requirements.txt

    startCommand: |
      # Verify Chrome and ChromeDriver versions
      echo "Verifying Chrome and ChromeDriver installation..."
      google-chrome --version
      /opt/render/project/src/bin/chromedriver --version

      # Start the Streamlit application
      streamlit run app.py --server.port $PORT --server.address 0.0.0.0

    envVars:
      - key: PYTHON_VERSION
        value: "3.11.11"
    region: oregon
    plan: free


